name: Convert OSM data to Geoparquet & Upload to Hugging face

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0' # Run weekly on Sunday at 2 AM

env:
  DUCKDB_VERSION: '1.3.2'
  OHSOME_PLANET_VERSION: '1.1.0'

jobs:
  download-convert-and-upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Central America
          - continent: central-america
          # Europe
          #- continent: europe
    steps:
      # Needed for ohsome-planet CLI tool to convert .osm.pbf -> .parquet
      - name: Checkout ohsome-planet repository instead of this repository
        uses: actions/checkout@v3
        with:
          repository: 'GIScience/ohsome-planet'
          submodules: true
          ref: ${{ env.OHSOME_PLANET_VERSION }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Cache ohsome-planet JAR
        uses: actions/cache@v3
        id: jar-cache
        with:
          path: ohsome-planet-cli/target/ohsome-planet.jar
          key: ${{ runner.os }}-ohsome-planet-${{ env.OHSOME_PLANET_VERSION }}

      - name: Install ohsome-planet
        if: steps.jar-cache.outputs.cache-hit != 'true'
        run: |          
          ./mvnw clean package -DskipTests

      - name: Install DuckDB
        run: |
          wget https://github.com/duckdb/duckdb/releases/download/v${{ env.DUCKDB_VERSION }}/duckdb_cli-linux-amd64.zip
          unzip duckdb_cli-linux-amd64.zip
          chmod a+x ./duckdb
      
      - name: Install Hugging Face CLI
        run: pip install huggingface_hub[cli]

      - name: Test Dependencies
        run: |
          hf version
          ./duckdb :memory: "SELECT 1"
          java -jar ohsome-planet-cli/target/ohsome-planet.jar --help
      
      - name: Download countries.csv from overturemaps
        run: | 
          ./duckdb -c "
              INSTALL httpfs; LOAD httpfs;
              INSTALL 'spatial'; LOAD 'spatial';
              COPY (
                  SELECT
                      country as id,
                      ST_AsText(geometry) as wkt
                  FROM read_parquet('s3://overturemaps-us-west-2/release/2025-09-24.0/theme=divisions/type=division_area/*', filename=true, hive_partitioning=1)
                  WHERE subtype = 'country' AND class = 'land'
                  ORDER BY country
              ) TO 'countries.csv' (HEADER, DELIMITER ';')
          "

      - name: Process ${{ matrix.continent }}
        run: |
          mkdir -p data/continent=${{ matrix.continent }}/
          curl -L -O https://download.geofabrik.de/${{ matrix.continent }}-latest.osm.pbf
          java -jar ohsome-planet-cli/target/ohsome-planet.jar contributions \
            --pbf=${{ matrix.continent }}-latest.osm.pbf --parallel=$(nproc) --output ${{ matrix.continent }}
            --country-file countries.csv
          ./duckdb -c "
              INSTALL 'spatial'; LOAD 'spatial';
              COPY (
                  SELECT
                      osm_type::ENUM ('node', 'way', 'relation') AS osm_type,
                      osm_id,
                      tags,
                      bbox,
                      UNNEST(countries) as country,
                      ST_GeomFromWKB(geometry) as geometry,
                  FROM '${{ matrix.continent }}/contributions/latest/*.parquet'
                  ORDER BY bbox.xmin, bbox.ymin, bbox.xmax, bbox.ymax
              ) TO 'data/continent=${{ matrix.continent }}' (
                  FORMAT PARQUET,
                  CODEC 'zstd',
                  COMPRESSION_LEVEL 20,
                  PARQUET_VERSION v2,
                  PARTITION_BY (country),
                  PER_THREAD_OUTPUT
              );
          "
      - name: Test ${{ matrix.continent }} data
        run: |
          ./duckdb -c "
            LOAD 'spatial';
            SUMMARIZE FROM 'data/continent=${{ matrix.continent }}/*/*.parquet';
          "

      - name: Upload to Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: hf upload --repo-type dataset open2roam/openstreetmaps ./data
      
